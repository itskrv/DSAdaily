class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& arr) {
         vector<vector<int>> ans;
        sort(arr.begin(), arr.end());
        int n=arr.size();
        for(int i=0;i<n-2;i++){
            if(arr[i]>0)
            break;
            //remove duplicate for first element of triplete
            if(i>0 && arr[i]==arr[i-1])
            continue;
            int start=i+1,end=n-1;
            while(start<end){
                int sum = arr[i]+arr[start]+arr[end];
                if(sum==0){
                    ans.push_back({arr[i],arr[start],arr[end]});
                    //remove duplicate for second element of triplete
                    while(start<end && arr[start]==arr[start+1])
                    start++;
                    //remove duplicates for third element of triplete
                    while(start<end && arr[end]==arr[end-1])
                    end--;

                    start++,end--;
                }
                else if(sum>0)
                end--;
                else
                start++;
            }
        }
        return ans;
        
    }
};
