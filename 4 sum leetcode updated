class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& arr, int target) {

       vector<vector<int>> ans;
        sort(arr.begin(), arr.end());
        int n=arr.size();
        
        for(int i=0;i<n-3;i++){

             
             //remove duplicate for first element of triplete
             if(i>0 && arr[i]==arr[i-1])
             continue;
            for(int j=i+1;j<n-2;j++){
               
             //remove duplicate for second element of triplete
              if(j>i+1 && arr[j]==arr[j-1])
              continue;
           
            int start=j+1,end=n-1;
            while(start<end){
       long long sum = static_cast<long long>(arr[i]) + arr[j] + arr[start] + arr[end];

                if(sum==target){
                    ans.push_back({arr[i],arr[j],arr[start],arr[end]});
                    //remove duplicate for third element of triplete
                    while(start<end && arr[start]==arr[start+1])
                    start++;
                    //remove duplicates for fourth element of triplete
                    while(start<end && arr[end]==arr[end-1])
                    end--;

                    start++,end--;
                }
                else if(sum>target)
                end--;
                else
                start++;
            }
        }
            
        }
        
    
   return ans;
    
    
    }
};
